# check image during "weird" errors

version: 2.1
jobs:
  build:
    docker:
      - image: cimg/base:2022.06-18.04
    environment:
      IMAGE_NAME_NGINX: nathanbenton/nginx-app
      IMAGE_NAME_FLASK: nathanbenton/flask-app-foo
    working_directory: ~/app/netviz
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build docker image for nginx
          command: |
            docker build ./zippadeedoda-app/ --tag ${IMAGE_NAME_NGINX}:latest
      - run:
          name: push docker image for nginx
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker tag $IMAGE_NAME_NGINX:latest $IMAGE_NAME_NGINX:$CIRCLE_SHA1
            docker push $IMAGE_NAME_NGINX:latest
            docker push $IMAGE_NAME_NGINX:$CIRCLE_SHA1
      - run:
          name: build docker image for flask
          command: |
            docker build ./flask-app/ --build-arg GITHUB_CS=$GITHUB_CS \
                                      --build-arg GITHUB_CID=$GITHUB_CID \
                                      --tag ${IMAGE_NAME_FLASK}:latest
      - run:
          name: push docker image for flask
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker tag $IMAGE_NAME_FLASK:latest $IMAGE_NAME_FLASK:$CIRCLE_SHA1
            docker push $IMAGE_NAME_FLASK:latest
            docker push $IMAGE_NAME_FLASK:$CIRCLE_SHA1

  deploy:
      docker:
        - image: cimg/base:2022.06-18.04
      working_directory: ~/app/netviz
      steps:
        - checkout
        - run:
            name: install envsubst for shell script
            command: |
              sudo apt-get update && sudo apt-get -y install gettext-base
        - run:
            name: install kubectl
            command: |
              curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
              chmod u+x ./kubectl
        - run:
            name: install helm
            command: |
              curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
              chmod 700 get_helm.sh
              ./get_helm.sh
        - run:
            name: add helm repo
            command: |
              helm repo add bitnami https://charts.bitnami.com/bitnami
        - run:
            name: run shell for deploy
            command: ./scooby-dooby-scripts/ci-deploy.sh
        - run:
            name: install/start postgres via helm
            command: |
              K8S_CERT=$(echo "$KUBERNETES_CLUSTER_CERTIFICATE" | base64 --decode)
              helm install postgres-runner -f ./helm/db-postgres-values.yml bitnami/postgresql --kube-apiserver $KUBERNETES_SERVER --kube-ca-file $K8S_CERT --kube-token "$KUBERNETES_TOKEN"
workflows:
  version: 2
  build-deploy-feature-setup-only:
    jobs:
      - build:
          filters:
            branches:
              only: [ feature/dbs-setup ]
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: [ feature/dbs-setup ]
